{"version":3,"sources":["components/InputFullSalary.js","helpers/Formatters.js","components/InputReadOnly.js","components/ProportionBar.js","helpers/salary.js","App.js","index.js"],"names":["InputFullSalary","handleInputChange","event","newValue","target","value","props","onSalaryChange","currentValue","this","className","autoFocus","id","type","onChange","min","step","htmlFor","Component","moneyFormatter","Intl","NumberFormat","style","currency","InputReadOnly","color","percentage","label","formattedPercentage","toFixed","replace","formatPercentage","formattedValue","format","formatMoney","readOnly","fontWeight","ProportionBar","inss","irpf","netSalary","colorINSS","colorIRPF","colorNetSalary","console","log","display","alignItems","justifyContent","backgroundColor","width","height","INSS_TABLE","minValue","maxValue","difference","discountPercentage","discountValue","round","calculateSalaryFrom","fullSalary","baseINSS","discountINSS","i","length","currentItem","calculateDiscountINSS","baseIRPF","discountIRPF","calculateDiscountIRPF","percentINSS","percentIRPF","percentNetSalary","App","handleFullSalaryChange","setState","state","salaryObject","styles","borda","title","border","borderRadius","padding","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.379b3fae.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class InputFullSalary extends Component {\r\n    handleInputChange = (event) => {\r\n        const newValue = +event.target.value;\r\n        this.props.onSalaryChange(newValue);\r\n    }\r\n\r\n  render() {\r\n    const { currentValue } = this.props;\r\n    return (\r\n      <div className=\"input-field col s12\">\r\n        <input\r\n          autoFocus\r\n          id=\"inputFullSalary\"\r\n          type=\"number\"\r\n          value={currentValue}\r\n          onChange={this.handleInputChange}\r\n          min=\"1000\"\r\n          step=\"100\"\r\n        />\r\n        <label className=\"active\" htmlFor=\"inputFullSalary\">\r\n          Sal√°rio bruto\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// const numberFormatter = Intl.NumberFormat('pt-BR');\r\nconst moneyFormatter = Intl.NumberFormat('pt-BR', {\r\n    style: 'currency',\r\n    currency: 'BRL',\r\n});\r\n\r\n// function formatNumber(value) {\r\n//     return numberFormatter.format(value);\r\n// }\r\n\r\nfunction formatMoney(value) {\r\n    return moneyFormatter.format(value);\r\n}\r\n\r\nfunction formatPercentage(value) {\r\n    return `${value.toFixed(2).replace('.', ',')}%`;\r\n}\r\n\r\nexport { formatMoney, formatPercentage };","import React, { Component } from \"react\";\r\nimport { formatMoney, formatPercentage } from \"../helpers/Formatters\";\r\n\r\nexport default class InputReadOnly extends Component {\r\n  render() {\r\n    const { color = \"black\", value, percentage = 0, label } = this.props;\r\n\r\n    const id = 'input' + label;\r\n\r\n    const formattedPercentage =\r\n      percentage > 0 ? `(${formatPercentage(percentage)})` : \"\";\r\n    const formattedValue = `${formatMoney(value)} ${formattedPercentage}`;\r\n\r\n    return (\r\n      <div className=\"input-field col s12 m6 l3\">\r\n        <input\r\n          id={id}\r\n          value={formattedValue}\r\n          readOnly\r\n          style={{ color, fontWeight: \"bold\" }}\r\n        />\r\n        <label className=\"active\" htmlFor={id}>\r\n          {label}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ProportionBar extends Component {\r\n  render() {\r\n    const {\r\n      inss,\r\n      irpf,\r\n      netSalary,\r\n      colorINSS = \"#e67e22\",\r\n      colorIRPF = \"#c0392b\",\r\n      colorNetSalary = \"#16a085\",\r\n    } = this.props;\r\n\r\n    console.log(this.props);\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            backgroundColor: colorINSS,\r\n            width: inss + \"%\",\r\n            height: \"20px\",\r\n          }}\r\n        />\r\n        <div\r\n          style={{\r\n            backgroundColor: colorIRPF,\r\n            width: irpf + \"%\",\r\n            height: \"20px\",\r\n          }}\r\n        />\r\n        <div\r\n          style={{\r\n            backgroundColor: colorNetSalary,\r\n            width: netSalary + \"%\",\r\n            height: \"20px\",\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Fonte: https://www.todacarreira.com/calculo-salario-liquido/\r\n\r\nconst INSS_TABLE = [\r\n  {\r\n    id: 1,\r\n    minValue: 0,\r\n    maxValue: 1045,\r\n    difference: 1045 - 0,\r\n    discountPercentage: 0.075,\r\n    discountValue: -1,\r\n  },\r\n  {\r\n    id: 2,\r\n    minValue: 1045.01,\r\n    maxValue: 2089.6,\r\n    difference: 2089.6 - 1045,\r\n    discountPercentage: 0.09,\r\n  },\r\n  {\r\n    id: 3,\r\n    minValue: 2089.61,\r\n    maxValue: 3134.4,\r\n    difference: 3134.4 - 2089.6,\r\n    discountPercentage: 0.12,\r\n  },\r\n  {\r\n    id: 4,\r\n    minValue: 3134.41,\r\n    maxValue: 6101.06,\r\n    difference: 6101.06 - 3134.4,\r\n    discountPercentage: 0.14,\r\n  },\r\n];\r\n\r\nfunction round(value) {\r\n  return +value.toFixed(2);\r\n}\r\n\r\nfunction calculateDiscountINSS(baseINSS) {\r\n  let discountINSS = 0;\r\n\r\n  if (baseINSS > 6101.07) {\r\n    return 713.1;\r\n  }\r\n\r\n  for (var i = 0; i < INSS_TABLE.length; i++) {\r\n    var currentItem = INSS_TABLE[i];\r\n    let discountValue = 0;\r\n\r\n    if (baseINSS > currentItem.maxValue) {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round(currentItem.difference * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n    } else {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round((baseINSS - currentItem.minValue) * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n      break;\r\n    }\r\n  }\r\n\r\n  discountINSS = round(discountINSS);\r\n\r\n  return discountINSS;\r\n}\r\n\r\nfunction calculateDiscountIRPF(baseIRPF) {\r\n  let discountIRPF =\r\n    baseIRPF < 1903.98\r\n      ? 0\r\n      : baseIRPF < 2826.65\r\n      ? round(baseIRPF * 0.075) - 142.8\r\n      : baseIRPF < 3751.05\r\n      ? round(baseIRPF * 0.15) - 354.8\r\n      : baseIRPF < 4664.68\r\n      ? round(baseIRPF * 0.225) - 636.13\r\n      : round(baseIRPF * 0.275) - 869.36;\r\n\r\n  discountIRPF = round(discountIRPF);\r\n\r\n  return discountIRPF;\r\n}\r\n\r\nfunction calculateSalaryFrom(fullSalary) {\r\n  const baseINSS = fullSalary;\r\n  const discountINSS = calculateDiscountINSS(baseINSS);\r\n\r\n  const baseIRPF = baseINSS - discountINSS;\r\n  const discountIRPF = calculateDiscountIRPF(baseIRPF);\r\n\r\n  const netSalary = baseINSS - discountINSS - discountIRPF;\r\n\r\n  const percentINSS = +((discountINSS / fullSalary) * 100).toFixed(2);\r\n  const percentIRPF = +((discountIRPF / fullSalary) * 100).toFixed(2);\r\n  const percentNetSalary = +((netSalary / fullSalary) * 100).toFixed(2);\r\n\r\n  return {\r\n    baseINSS,\r\n    discountINSS,\r\n    baseIRPF,\r\n    discountIRPF,\r\n    netSalary,\r\n    percentINSS,\r\n    percentIRPF,\r\n    percentNetSalary,\r\n  };\r\n}\r\n\r\nexport { calculateSalaryFrom };\r\n","import React, { Component } from \"react\";\nimport InputFullSalary from \"./components/InputFullSalary\";\nimport InputReadOnly from \"./components/InputReadOnly\";\nimport ProportionBar from \"./components/ProportionBar\";\nimport { calculateSalaryFrom } from \"./helpers/salary\";\n\nconst COLOR_INSS = \"#e67e22\";\nconst COLOR_IRPF = \"#c0392b\";\nconst COLOR_NETSALARY = \"#16a085\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      fullSalary: 1000,\n    };\n  }\n\n  handleFullSalaryChange = (newValue) => {\n    this.setState({ fullSalary: newValue });\n  };\n\n  render() {\n    const { fullSalary } = this.state;\n\n    const salaryObject = calculateSalaryFrom(fullSalary);\n\n    const {\n      baseINSS,\n      discountINSS,\n      baseIRPF,\n      discountIRPF,\n      netSalary,\n      percentINSS,\n      percentIRPF,\n      percentNetSalary,\n    } = salaryObject;\n\n    return (\n      <div className=\"container\">\n        <div style={styles.borda} className=\"center\">\n          <h1 style={styles.title}>React Sal√°rio</h1>\n          <div className=\"row\">\n            <InputFullSalary\n              currentValue={fullSalary}\n              onSalaryChange={this.handleFullSalaryChange}\n            />\n          </div>\n\n          <div className=\"row\">\n            <InputReadOnly label=\"Base INSS\" value={baseINSS} />\n\n            <InputReadOnly\n              label=\"Desconto INSS\"\n              value={discountINSS}\n              percentage={percentINSS}\n              color={COLOR_INSS}\n            />\n\n            <InputReadOnly label=\"Base IRPF\" value={baseIRPF} />\n\n            <InputReadOnly\n              label=\"Desconto IRPF\"\n              value={discountIRPF}\n              percentage={percentIRPF}\n              color={COLOR_IRPF}\n            />\n\n            <InputReadOnly\n              label=\"Sal√°rio l√≠quido\"\n              value={netSalary}\n              percentage={percentNetSalary}\n              color={COLOR_NETSALARY}\n            />\n          </div>\n          <ProportionBar\n            inss={percentINSS}\n            irpf={percentIRPF}\n            netSalary={percentNetSalary}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  borda: {\n    border: \"1px solid gray\",\n    borderRadius: \"10px\",\n    padding: \"10px\",\n    marginTop: \"50px\",\n  },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}